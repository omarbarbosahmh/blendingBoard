{"version":3,"sources":["LetterButton.js","Container.js","MainContainer.js","SelectionBlock.js","SelectionContainer.js","App.js","index.js"],"names":["LetterButton","color","letter","onClick","selected","blocked","style","border","textAlign","backgroundColor","cursor","fontWeight","borderRadius","display","padding","marginRight","Container","letters","selectedLetters","onLetterClick","blockedLetters","map","index","some","MainContainer","lettersConfig","useState","lettersArray","setSelectedLetters","wordDisplayed","setWordDisplayed","wordHistory","setWordHistory","fontSize","length","join","margin","width","float","console","log","cloneWordDisplayed","cloneLettersArray","selectedLetter","clear","reverse","word","SelectionBlock","getAllSelectedLetters","initialConfig","getSelectedLettersByColor","getSelectedAllOrNoneLettersByColor","desSelectLetterByColor","emitAllLetters","allLettersArray","allLetters","flat","filter","emitSelectedLettersByColor","letterArrayObj","SelectionContainer","getTransformToMainContainerLetterArrayProps","initialConfigs","gridTemplateColumns","gridGap","initialLettersByColor","allLettersByColorAndRow","initialConfigObj","obj","innerObj","push","letterConfig","arraySelectedLetters","Set","Array","from","arrayLetters","setLetters","allSelectedLetters","setAllSelectedLetters","allSelectedLettersByColor","setSelectedLettersByColor","cloneAllSelectedLettersByColor","transformToMainContainerLetterArrayProps","indexOf","splice","transformed","k","useEffect","allOrNone","letter2","cloneAllSelectedLetters","App","setLettersConfig","selectedScreen","setSelectedScreen","src","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c779c5f.chunk.js","sourcesContent":["\nexport default function LetterButton({color,letter,onClick,selected,blocked,style={}}) {\n \n    style = {\n     border:'1px solid black',\n     textAlign:'center',\n     backgroundColor:blocked?'grey':`rgba(${color},${selected?'1':'0.4'})`,\n     cursor: blocked?'no-drop':'pointer',\n     fontWeight:600,\n     borderRadius:\"10px\",\n     display: 'inline-block',\n     padding:'5px 10px',\n     marginRight:'10px',\n     ...style\n   }\n   return <div><div style={style} onClick={()=>blocked?null:onClick(letter)}>{letter}</div></div>\n  }\n  ","import LetterButton from \"./LetterButton\";\nexport default function Container({letters,selectedLetters,color,onLetterClick,blockedLetters,style}) {\n \n \n return <div style={style?style:{}}>{letters.map((letter,index)=>{return  <LetterButton\n       key={index}\n       color={color}\n       letter={letter}\n       selected={selectedLetters.some(selectedLetters=>{return selectedLetters===letter})}\n       blocked={blockedLetters.some(blockedLetters=>{return blockedLetters===letter})}\n       onClick={onLetterClick}\n     ></LetterButton> })}</div>\n}\n","import Container from \"./Container\";\nimport {useState} from 'react'\nexport default function MainContainer({lettersConfig,style}) {\n let [lettersArray,setLettersArray] = useState([...lettersConfig])\n let [selectedLetters,setSelectedLetters] = useState([])\n let [wordDisplayed,setWordDisplayed] = useState([])\n let [wordHistory,setWordHistory]= useState([])\n let onLetterClick= (letter,index)=>{\n \n  \n \n  \n   console.log(letter,index)\n   let cloneWordDisplayed= [...wordDisplayed]\n \n \n   let cloneLettersArray = [...lettersArray]\n \nif(lettersArray[index].selectedLetters.some(selectedLetter=>selectedLetter===letter)){\n \n      cloneLettersArray[index].selectedLetters = []\n      cloneWordDisplayed[index]=''\n   }else{\ncloneLettersArray[index].selectedLetters = [letter]\n cloneWordDisplayed[index]=letter\n   }\n   setSelectedLetters(cloneLettersArray)\nsetWordHistory([...wordHistory,cloneWordDisplayed.join('')])\n   setWordDisplayed(cloneWordDisplayed)\n  \n \n }\n return <div style={style? style:{}}>\n   <div style={{textAlign:'center',fontWeight:'600',fontSize:\"80px\"}}>\n    \n     {wordDisplayed.length === 0 || wordDisplayed.join() ===''  ? 'Start Typing...':wordDisplayed.join('')}\n   </div>\n   <div style={{margin:\"20px\"}}>\n \n<div style={{ width:'90%', float:\"left\",textAlign:'center'}}>\n<div style={{display: 'inline-block'}}>\n    {lettersArray.map((letters,index)=>{return <Container\n       key = {index}\n       style = {letters.style?letters.style:{}}\n       letters = {letters.letters}\n       selectedLetters = {letters.selectedLetters}\n       color = {letters.color}\n       onLetterClick={(letter)=>onLetterClick(letter,index)}\n       blockedLetters={letters.blockedLetters}\n       >\n     </Container>})\n    \n     }\n      <div style={{clear:'both'}}></div>\n     </div>\n   \n</div>\n<div style={{   float:\"left\",display: 'inline-block'}}>\n  {[...wordHistory].reverse().map(word=>{return <p style={{fontWeight:'600', fontSize:'30px'}}>{word}</p>})}\n</div>\n<div style={{clear:'both'}}></div>\n   </div>\n  \n    \n   \n </div>\n}\n","import LetterButton from \"./LetterButton\";\nimport {useState} from 'react'\nimport Container from \"./Container\";\n \nexport default function SelectionBlock({getAllSelectedLetters,initialConfig,getSelectedLettersByColor,getSelectedAllOrNoneLettersByColor,desSelectLetterByColor}) {\n \n let [lettersArray,setLettersArray] = useState(\ninitialConfig)\n let [selectedLetters,setSelectedLetters] = useState([])\n \n let emitAllLetters=(allLettersArray)=>{\n   //console.log(lettersArray)\nlet allLetters = [...allLettersArray].map(({selectedLetters})=>{\n//console.log(selectedLetters)\nreturn selectedLetters\n})\nallLetters= allLetters.flat(1)\n//console.log(allLetters)\n   getAllSelectedLetters(allLetters)\n}\n \nlet emitSelectedLettersByColor=(color,selectedLetters)=>{\n   getSelectedLettersByColor(color,selectedLetters)\n}\n \n let onLetterClick= (letter,index,color,selected)=>{\n   //console.log(letter,index)\n   let cloneLettersArray = [...lettersArray]\n     if(lettersArray[index].selectedLetters.some(selectedLetter=>selectedLetter===letter)){\n           cloneLettersArray[index].selectedLetters = cloneLettersArray[index].selectedLetters.filter(selectedLetter=>selectedLetter!==letter)      \n         }else{\n     cloneLettersArray[index].selectedLetters = [...cloneLettersArray[index].selectedLetters,letter]\n         }\n        \n         setSelectedLetters(cloneLettersArray)\n         emitAllLetters(cloneLettersArray)\n         if(!selected){\n           emitSelectedLettersByColor(color,cloneLettersArray[index].selectedLetters)\n         }else{\ndesSelectLetterByColor(color,letter)\n         }\n       \n        \n \n }\n let selectAll= ()=>{\n      let cloneLettersArray = [...lettersArray]\n      cloneLettersArray.map(letterArrayObj=>{\n     letterArrayObj.selectedLetters = [...letterArrayObj.letters]\n  \n   \n \nreturn letterArrayObj\n      })\n        setSelectedLetters(cloneLettersArray)\n        emitAllLetters(cloneLettersArray)\n          getSelectedAllOrNoneLettersByColor('all')\n }\n \n   let selectNone= ()=>{\n      let cloneLettersArray = [...lettersArray]\n      cloneLettersArray.map(letterArrayObj=>{\nletterArrayObj.selectedLetters = []\n \nreturn letterArrayObj\n      })\n        setSelectedLetters(cloneLettersArray)\n        emitAllLetters(cloneLettersArray)\n        getSelectedAllOrNoneLettersByColor('none')\n }\n return <div>\n \n   <div style={{margin:\"20px\"}}>\n<div style={{  width:'100%', float:\"left\",display: 'inline-block'}}>\n <div style={{width:'130px'}}>\n  <LetterButton letter=\"All\" onClick={selectAll} style={{float:'left'}} ></LetterButton>\n   <LetterButton letter=\"None\" onClick={selectNone} style={{float:'left'}}></LetterButton>\n   </div>\n</div>\n<div style={{ width:'100%', float:\"left\",textAlign:'center'}}>\n \n<div style={{display: 'inline-block'}}>\n    {lettersArray.map((letters,index)=>{return <Container\n       key = {index}\n       style = {letters.style?letters.style:{}}\n       letters = {letters.letters}\n       selectedLetters = {letters.selectedLetters}\n       color = {letters.color}\n       onLetterClick={(letter)=>onLetterClick(letter,index,letters.color,letters.selectedLetters.some(selectedLetter=>selectedLetter===letter))}\n       blockedLetters={letters.blockedLetters}\n       >\n     </Container>})\n    \n     }\n      <div style={{clear:'both'}}></div>\n     </div>\n   \n</div>\n \n<div style={{clear:'both'}}></div>\n   </div>\n  \n    \n   \n </div>\n}","import {useState, useEffect} from 'react'\nimport SelectionBlock from \"./SelectionBlock\";\nexport default function SelectionContainer({getTransformToMainContainerLetterArrayProps,style}) {\n \n \n \n   let initialConfigs= [[\n   {letters:['','b','c','d','f','g','h','j','k','l','m','n','p','r','s','t','v','w','y','z'],color:'0,0,255',selectedLetters:['','b','c','d','f','g','h','j','k','l','m','n','p','r','s','t','v','w','y','z'],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n   {letters:['','a','e','i','o','u','y'],color:'79, 255, 67',selectedLetters:['','a','e','i','o','u','y'],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(4,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n   {letters:['','b','d','g','k','m','n','p','s','t','x'],color:'255,0,0',selectedLetters:['','b','d','g','k','m','n','p','s','t','x'],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n   {letters:['','e'],color:'255,0,255',selectedLetters:['','e'],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}}\n ],[\n   {letters:['ch','sh','th','ph','wh'],color:'0,0,255',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n   {letters:['ar','er','ir','oi','ur'],color:'79, 255, 67',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(4,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n   {letters:['f','l','s','z','ff','ll','ss','zz','c','r','v'],color:'255,0,0',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n   {letters:['a','es'],color:'255,0,255',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}}\n ],[\n   {letters:['sc','sk','sl','sm','sn','sp','st','sw','br','cr','dr','fr','gr','pr','fr','gr','pr','tr','bl','cl','fl','gl','pl'],color:'0,0,255',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n   {letters:['ai','ea','ee','ie','oa','oi','oo','ou','ow'],color:'79, 255, 67',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(4,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n   {letters:['ct','ft','ld','lp','lt','mp','nd','nt','pt','sk','sp','st'],color:'255,0,0',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n   {letters:[],color:'255,0,255',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}}\n ],[\n   {letters:['shr','thr','scr','spl','spr','squ','str'],color:'0,0,255',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n   {letters:['au','aw','ei','eu','ew','ue','ui'],color:'79, 255, 67',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(4,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n   {letters:['ch','ph','sh','th','ck','ng'],color:'255,0,0',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n   {letters:[],color:'255,0,255',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}}\n ],[\n    {letters:['gn','kn','wr','qu'],color:'0,0,255',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n    {letters:['aigh','augh','igh','eigh','ough','oe','ay','ey','oy'],color:'79, 255, 67',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(4,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n    {letters:['mb','nk','dge','tch'],color:'255,0,0',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n    {letters:[],color:'255,0,255',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}}\n  ]]\n \n let initialLettersByColor ={}\n let allLettersByColorAndRow = []\nlet allLetters = [...initialConfigs].map((initialConfigObj,index)=>{\n let obj= {}\n initialConfigObj.map(innerObj=>{\n  obj[innerObj.color]= {letters:innerObj.letters}\n \n})\nallLettersByColorAndRow.push(obj)\ninitialConfigObj = initialConfigObj.map(({selectedLetters})=>selectedLetters).flat()\n \n \nreturn initialConfigObj\n})\n//allLetters= allLetters.flat()\nlet allLettersConfigFlat= initialConfigs.flat(1)\nallLettersConfigFlat.map(letterConfig=>{\n let arraySelectedLetters =   [...initialLettersByColor[letterConfig.color] && initialLettersByColor[letterConfig.color].selectedLetters?initialLettersByColor[letterConfig.color].selectedLetters:[] ,...letterConfig.selectedLetters]\n let setSelectedLetters= new Set(arraySelectedLetters)\n  arraySelectedLetters=Array.from(setSelectedLetters)\n  let arrayLetters =   [...initialLettersByColor[letterConfig.color] && initialLettersByColor[letterConfig.color].letters?initialLettersByColor[letterConfig.color].letters:[] ,...letterConfig.letters]\n let setLetters= new Set(arrayLetters)\n  arrayLetters=Array.from(setLetters)\n  initialLettersByColor[letterConfig.color] = {selectedLetters:arraySelectedLetters}\n \n})\n \n \n let [allSelectedLetters,setAllSelectedLetters]=useState([...allLetters])\n let [allSelectedLettersByColor,setSelectedLettersByColor]=useState(initialLettersByColor)\n \n let getAllSelectedLetters=(selectedLetters,index)=>{\n   console.log(selectedLetters,index)\n    let cloneAllSelectedLetters = [...allSelectedLetters]\n    cloneAllSelectedLetters[index] = selectedLetters\n    \n \nsetAllSelectedLetters(cloneAllSelectedLetters)\n \n }\n \n let getSelectedLettersByColor = (color,selectedLetters)=>{\n   console.log(color,selectedLetters)\n  let cloneAllSelectedLettersByColor ={...allSelectedLettersByColor}\n let arrayLetters=[...cloneAllSelectedLettersByColor[color].selectedLetters,...selectedLetters]\n  let setLetters= new Set(arrayLetters)\n  arrayLetters=Array.from(setLetters)\n  cloneAllSelectedLettersByColor[color] = {selectedLetters:arrayLetters}\n  setSelectedLettersByColor(cloneAllSelectedLettersByColor)\n  transformToMainContainerLetterArrayProps(cloneAllSelectedLettersByColor)\n}\n \nlet desSelectLetterByColor=(color,letter)=>{\n //alert(color + letter)\nlet cloneAllSelectedLettersByColor ={...allSelectedLettersByColor}\nlet arrayLetters=  [...cloneAllSelectedLettersByColor[color].selectedLetters]\n \nconst index = arrayLetters.indexOf(letter);\nif (index > -1) {\n arrayLetters.splice(index, 1);\n}\n   let setLetters= new Set(arrayLetters)\n  arrayLetters=Array.from(setLetters)\n  cloneAllSelectedLettersByColor[color] = {selectedLetters:arrayLetters}\nsetSelectedLettersByColor(cloneAllSelectedLettersByColor)\ntransformToMainContainerLetterArrayProps(cloneAllSelectedLettersByColor)\n}\nlet getSelectedAllOrNoneLettersByColor = (allOrNone,index)=>{\n  let cloneAllSelectedLettersByColor ={...allSelectedLettersByColor}\n \nlet arrayLetters =[]\n      for(var k in allSelectedLettersByColor) {\n        if(allOrNone==='none'){\n         // alert(k)\narrayLetters= [...cloneAllSelectedLettersByColor[k].selectedLetters].filter(letter=>{\n  return !allLettersByColorAndRow[index][k].letters.some(letter2=>letter2===letter)\n})\n        }else{\n        //  alert('index'+index+'color'+k)\n        //   alert(JSON.stringify(allLettersByColorAndRow[index]))\narrayLetters=  [...cloneAllSelectedLettersByColor[k].selectedLetters, ...allLettersByColorAndRow[index][k].letters]\n        }\n   let setLetters= new Set(arrayLetters)\n  arrayLetters=Array.from(setLetters)\n  cloneAllSelectedLettersByColor[k] = {selectedLetters:arrayLetters}\n      }\n     \n  setSelectedLettersByColor(cloneAllSelectedLettersByColor)\n  transformToMainContainerLetterArrayProps(cloneAllSelectedLettersByColor)\n}\n \nlet transformToMainContainerLetterArrayProps = (allSelectedLettersByColor)=>{\n   let transformed=[]\n   for(var k in allSelectedLettersByColor) {\n \n       let lettersConfig = {letters:allSelectedLettersByColor[k].selectedLetters,color:k,selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px'}}\n       transformed.push(lettersConfig)\n}\n//console.log(transformed)\ngetTransformToMainContainerLetterArrayProps(transformed)\n \n}\n \nuseEffect(() => {\n   transformToMainContainerLetterArrayProps(initialLettersByColor);\n }, []);\n return <div style={style? style:{}}>\n        <div style={{textAlign:'center',fontWeight:'600',fontSize:\"80px\"}}>\n    \n     {allSelectedLetters.flat(1).length} Selected\n   </div>\n {initialConfigs.map((initialConfig,index)=><SelectionBlock initialConfig={initialConfig} desSelectLetterByColor={desSelectLetterByColor} getSelectedLettersByColor={getSelectedLettersByColor} getSelectedAllOrNoneLettersByColor={(allOrNone)=>getSelectedAllOrNoneLettersByColor(allOrNone,index)} getAllSelectedLetters={(lettersArray)=>getAllSelectedLetters(lettersArray,index)}></SelectionBlock>)}\n   \n  \n  \n </div>\n \n}\n","import MainContainer from \"./MainContainer\";\nimport {useState} from 'react'\nimport SelectionContainer from \"./SelectionContainer\";\nfunction App() {\nlet [lettersConfig,setLettersConfig] = useState([])\n \nlet [selectedScreen,setSelectedScreen] = useState('SelectionContainer')\n return <div  >\n <div style={{margin:'20px auto', width:'70%'}} >\n   <div style={{display:'inline-block'}}>\n     <img src=\"../public/assets/question.png\" alt=\"question\" width='90px'></img>\n     </div>\n  {selectedScreen==='MainContainer' && <div style={{float:'right',display:'inline-block',cursor:\"pointer\"}} onClick={()=>setSelectedScreen(\"SelectionContainer\")}>\n     <img src=\"../public/assets/burguer.png\" alt=\"burguer icon\" width=\"60px\"></img>\n     </div>}\n      {selectedScreen==='SelectionContainer' && <div style={{float:'right',display:'inline-block',cursor:\"pointer\"}} onClick={()=>setSelectedScreen(\"MainContainer\")}>\n     <img src=\"../public/assets/check.png\" alt=\"burguer icon\" width=\"80px\"></img>\n     </div>}\n \n     <div style={{clear:'both'}}>\n       </div>\n       </div>\n      { selectedScreen==='MainContainer'&& <MainContainer       lettersConfig={lettersConfig}\n       >\n     </MainContainer>}\n \n    <SelectionContainer style={{display:selectedScreen==='MainContainer'?'none':'inline'}} getTransformToMainContainerLetterArrayProps={setLettersConfig}\n       >\n     </SelectionContainer>\n  \n  \n  \n </div>\n \n}\n \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}