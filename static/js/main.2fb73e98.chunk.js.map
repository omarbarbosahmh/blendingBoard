{"version":3,"sources":["LetterButton.js","Container.js","MainContainer.js","SelectionBlock.js","SelectionContainer.js","App.js","index.js"],"names":["LetterButton","color","letter","onClick","selected","blocked","style","border","textAlign","backgroundColor","cursor","fontWeight","borderRadius","display","padding","marginRight","Container","letters","selectedLetters","onLetterClick","blockedLetters","map","index","some","MainContainer","lettersConfig","emitChoosePreset","useState","lettersArray","setLettersArray","setSelectedLetters","wordDisplayed","setWordDisplayed","wordHistory","setWordHistory","JSON","parse","localStorage","getItem","presets","selectedPreset","setSelectedPreset","name","value","onChange","e","preset","transformed","choosePreset","target","fontSize","length","join","margin","height","overflowY","width","float","console","log","cloneWordDisplayed","cloneLettersArray","selectedLetter","clear","reverse","word","SelectionBlock","getAllSelectedLetters","initialConfig","getSelectedLettersByColor","getSelectedAllOrNoneLettersByColor","desSelectLetterByColor","uniqueId","calculateH","setCalculateH","emitAllLetters","allLettersArray","allLetters","flat","emitSelectedLettersByColor","filter","useEffect","returnedFunction","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","debounce","window","addEventListener","id","position","marginTop","document","getElementById","clientHeight","letterArrayObj","selectByIndex","categoryName","flexDirection","subCategories","subCategoryletters","index2","subCategoryName","forwardRef","props","ref","getTransformToMainContainerLetterArrayProps","useImperativeHandle","choosePresetExternal","setPresets","presetName","setPresetName","reset","Date","now","setUniqueId","defaultConfigs","gridTemplateColumns","gridGap","initialConfigs","setInitialConfigs","initialLettersByColor","allLettersByColorAndRow","initialConfigObj","obj","innerObj","push","letterConfig","arraySelectedLetters","Set","Array","from","arrayLetters","setLetters","allSelectedLetters","setAllSelectedLetters","allSelectedLettersByColor","setSelectedLettersByColor","cloneAllSelectedLettersByColor","letter2","transformToMainContainerLetterArrayProps","indexOf","splice","k","i","setItem","presetSaved","defaultConfigsClone","defaultConfigArray","defaultConfigObj","copyDefaultConfigObj","presetSavedLetter","includes","stringify","presetX","type","error","alert","removeItem","newPreset","allOrNone","cloneAllSelectedLetters","App","setLettersConfig","selectedScreen","setSelectedScreen","childRef","useRef","justifyContent","alignItems","src","alt","presset","current","SelectionContainer","ReactDOM","render","StrictMode"],"mappings":"sLAAe,SAASA,EAAT,GAAyE,IAAlDC,EAAiD,EAAjDA,MAAMC,EAA2C,EAA3CA,OAAOC,EAAoC,EAApCA,QAAQC,EAA4B,EAA5BA,SAASC,EAAmB,EAAnBA,QAAmB,IAAXC,aAAW,MAAL,GAAK,EActF,OAZCA,EAAK,aACJC,OAAO,kBACPC,UAAU,SACVC,gBAAgBJ,EAAQ,OAAD,eAAgBJ,EAAhB,YAAyBG,EAAS,IAAI,MAAtC,KACvBM,OAAQL,EAAQ,UAAU,UAC1BM,WAAW,IACXC,aAAa,OACbC,QAAS,eACTC,QAAQ,WACRC,YAAY,QACTT,GAEE,8BAAK,qBAAKA,MAAOA,EAAOH,QAAS,kBAAIE,EAAQ,KAAKF,EAAQD,IAArD,SAA+DA,MCb7D,SAASc,EAAT,GAAwF,IAApEC,EAAmE,EAAnEA,QAAQC,EAA2D,EAA3DA,gBAAgBjB,EAA2C,EAA3CA,MAAMkB,EAAqC,EAArCA,cAAcC,EAAuB,EAAvBA,eAAed,EAAQ,EAARA,MAG7F,OAAO,qBAAKA,MAAOA,GAAY,GAAxB,SAA6BW,EAAQI,KAAI,SAACnB,EAAOoB,GAAS,OAAQ,cAACtB,EAAD,CAEnEC,MAAOA,EACPC,OAAQA,EACRE,SAAUc,EAAgBK,MAAK,SAAAL,GAAkB,OAAOA,IAAkBhB,KAC1EG,QAASe,EAAeG,MAAK,SAAAH,GAAiB,OAAOA,IAAiBlB,KACtEC,QAASgB,GALJG,QCHG,SAASE,EAAT,GAAgE,IAAxCC,EAAuC,EAAvCA,cAAcnB,EAAyB,EAAzBA,MAAMoB,EAAmB,EAAnBA,iBAC1D,EAAqCC,mBAAS,YAAIF,IAAlD,mBAAKG,EAAL,KAAkBC,EAAlB,KACA,EAA2CF,mBAAS,IAApD,mBAAqBG,GAArB,WACA,EAAuCH,mBAAS,IAAhD,mBAAKI,EAAL,KAAmBC,EAAnB,KACA,EAAkCL,mBAAS,IAA3C,mBAAKM,EAAL,KAAiBC,EAAjB,KACC,EAA0BP,mBAAUQ,KAAKC,MAAMC,aAAaC,QAAQ,YAAeH,KAAKC,MAAMC,aAAaC,QAAQ,YAAnC,IAAhF,mBAAKC,EAAL,KACF,GADE,KACsCZ,mBAASU,aAAaC,QAAQ,oBAAtE,mBAAKE,EAAL,KAAqBC,EAArB,KAqCC,OAAO,sBAAKnC,MAAOA,GAAa,GAAzB,UACJ,yBAAQoC,KAAK,SAASC,MAAOH,EAAgBI,SAAU,SAACC,GAAD,OAXzC,SAACC,GAChBL,EAAkBK,GAClBpB,EAAiBoB,GACjB,IAAIlB,EAAcO,KAAKC,MAAMC,aAAaC,QAAQQ,IAErDjB,EAAgBD,EAAamB,aAMmCC,CAAaH,EAAEI,OAAON,QAAlF,UACS,wBAAQA,MAAO,UAAf,qBACCJ,EAAQlB,KAAI,SAAAyB,GAAM,OAAE,wBAAQH,MAAOG,EAAf,SAAwBA,UAEvD,qBAAKxC,MAAO,CAACE,UAAU,SAASG,WAAW,MAAMuC,SAAS,QAA1D,SAE4B,IAAzBnB,EAAcoB,QAAwC,KAAxBpB,EAAcqB,OAAgB,kBAAkBrB,EAAcqB,KAAK,MAEpG,sBAAK9C,MAAO,CAAC+C,OAAO,OAAOC,OAAO,OAAQC,UAAU,QAApD,UAEH,qBAAKjD,MAAO,CAAEkD,MAAM,MAAOC,MAAM,OAAOjD,UAAU,UAAlD,SACA,sBAAKF,MAAO,CAACO,QAAS,gBAAtB,UACKe,EAAaP,KAAI,SAACJ,EAAQK,GAAS,OAAO,cAACN,EAAD,CAExCV,MAASW,EAAQX,MAAMW,EAAQX,MAAM,GACrCW,QAAWA,EAAQA,QACnBC,gBAAmBD,EAAQC,gBAC3BjB,MAASgB,EAAQhB,MACjBkB,cAAe,SAACjB,GAAD,OAvDF,SAACA,EAAOoB,GAKzBoC,QAAQC,IAAIzD,EAAOoB,GACnB,IAAIsC,EAAmB,YAAK7B,GAGxB8B,EAAiB,YAAOjC,GAE5BA,EAAaN,GAAOJ,gBAAgBK,MAAK,SAAAuC,GAAc,OAAEA,IAAiB5D,MAEvE2D,EAAkBvC,GAAOJ,gBAAkB,GAC3C0C,EAAmBtC,GAAO,KAEhCuC,EAAkBvC,GAAOJ,gBAAkB,CAAChB,GAC3C0D,EAAmBtC,GAAOpB,GAExB4B,EAAmB+B,GACtB3B,EAAe,GAAD,mBAAKD,GAAL,CAAiB2B,EAAmBR,KAAK,OACpDpB,EAAiB4B,GAkCYzC,CAAcjB,EAAOoB,IAC9CF,eAAgBH,EAAQG,gBANjBE,MAWR,qBAAKhB,MAAO,CAACyD,MAAM,eAIzB,qBAAKzD,MAAO,CAAImD,MAAM,OAAO5C,QAAS,gBAAtC,SACI,YAAIoB,GAAa+B,UAAU3C,KAAI,SAAA4C,GAAO,OAAO,mBAAG3D,MAAO,CAACK,WAAW,MAAOuC,SAAS,QAAtC,SAAgDe,SAEjG,qBAAK3D,MAAO,CAACyD,MAAM,gBCzEJ,SAASG,EAAT,GAA6J,IAAD,EAAnIC,EAAmI,EAAnIA,sBAAsBC,EAA6G,EAA7GA,cAAcC,EAA+F,EAA/FA,0BAA0BC,EAAqE,EAArEA,mCAAmCC,EAAkC,EAAlCA,uBAAuBC,EAAW,EAAXA,SAE/J,EAAqC7C,mBACtCyC,GADC,mBAAKxC,EAAL,KAAkBC,EAAlB,KAEA,EAA2CF,mBAAS,IAApD,mBAAqBG,GAArB,WACA,EAAiCH,oBAAS,GAA1C,mBAAK8C,EAAL,KAAgBC,EAAhB,KAEIC,EAAe,SAACC,GAErB,IAAIC,EAAa,YAAID,GAAiBvD,KAAI,YAE1C,OAF+D,EAAnBH,mBAI5C2D,EAAYA,EAAWC,KAAK,GAEzBX,EAAsBU,IAGrBE,EAA2B,SAAC9E,EAAMiB,EAAgB2D,GACnDR,EAA0BpE,EAAMiB,EAAgB2D,IAG9C1D,EAAe,SAACjB,EAAOoB,EAAMrB,EAAMG,GAErC,IAAIyD,EAAiB,YAAOjC,GACvBA,EAAaN,GAAOJ,gBAAgBK,MAAK,SAAAuC,GAAc,OAAEA,IAAiB5D,KACvE2D,EAAkBvC,GAAOJ,gBAAkB2C,EAAkBvC,GAAOJ,gBAAgB8D,QAAO,SAAAlB,GAAc,OAAEA,IAAiB5D,KAElI2D,EAAkBvC,GAAOJ,gBAAzB,sBAA+C2C,EAAkBvC,GAAOJ,iBAAxE,CAAwFhB,IAGpF4B,EAAmB+B,GACnBc,EAAed,GACXzD,EAGbmE,EAAuBtE,EAAMC,GAFlB6E,EAA2B9E,EAAM4D,EAAkBvC,GAAOJ,kBAmFpE,OA7BA+D,qBAAU,WACVpD,EAAgBuC,KACd,CAACA,IACJa,qBAAU,WAqBV,IAAIC,EApBF,SAAkBC,EAAMC,EAAMC,GAC/B,IAAIC,EAEJ,OAAO,WACL,IAAIC,EAAUC,KACVC,EAAOC,UAEPC,EAAQ,WACVL,EAAU,KACLD,GAAWF,EAAKS,MAAML,EAASE,IAGlCI,EAAUR,IAAcC,EAC3BQ,aAAaR,GAEdA,EAAUS,WAAWJ,EAAOP,GACvBS,GAASV,EAAKS,MAAML,EAASE,IAIdO,EAAS,WAC7BtB,GAAeD,KACf,KAEHwB,OAAOC,iBAAiB,SAAUhB,MAC1B,8BACL,sBAAKiB,GAAI,aAAa3B,EAAUlE,MAAO,CAAC+C,OAAO,OAAO+C,SAAU,YAAhE,UAGF,sBAAK9F,MAAO,CAAC+F,WAAW,UAAAC,SAASC,eAAe,aAAa/B,UAArC,eAAgDgC,cAAa,EAAG,GAAK,KAAMhD,MAAM,KAAKC,MAAM,QAApH,UACE,cAACzD,EAAD,CAAcE,OAAO,OAAOC,QAlEZ,WACb,IAAI0D,EAAiB,YAAOjC,GAC5BiC,EAAkBxC,KAAI,SAAAoF,GAG5B,OAFAA,EAAevF,gBAAkB,GAE1BuF,KAEC3E,EAAmB+B,GACnBc,EAAed,GACfS,EAAmC,SAyDShE,MAAO,CAACmD,MAAM,WAChE,cAACzD,EAAD,CAAcE,OAAO,MAAMC,QAjFb,WACV,IAAI0D,EAAiB,YAAOjC,GAC5BiC,EAAkBxC,KAAI,SAAAoF,GAK5B,OAJKA,EAAevF,gBAAf,YAAqCuF,EAAexF,SAIlDwF,KAEC3E,EAAmB+B,GACnBc,EAAed,GACbS,EAAmC,QAsEIhE,MAAO,CAACmD,MAAM,WAC5D,qBAAKnD,MAAO,CAACyD,MAAM,aAGtB,qBAAKzD,MAAO,CAAEkD,MAAM,MAAOC,MAAM,OAAOjD,UAAU,UAAlD,SAEA,sBAAKF,MAAO,CAACO,QAAS,gBAAtB,UACMe,EAAaP,KAAI,SAACJ,EAAQK,GAAS,OAAO,sBAAKhB,MAAO,CAACmD,MAAM,OAAQ1C,YAAY,OAAQP,UAAU,QAAzD,UAAkE,uBAAML,QAAS,kBA9D7G,SAACmB,GAEb,IAAIuC,EAAiB,YAAOjC,GAE7BiC,EAAmBvC,GAAOJ,gBAAgBiC,SAAW,YAAKU,EAAmBvC,GAAOL,SAASkC,OACpGU,EAAmBvC,GAAOJ,gBAAiB,GAEtC2C,EAAmBvC,GAAOJ,gBAA1B,YAAiD2C,EAAmBvC,GAAOL,SAG5EyC,QAAQC,IAAIrC,GACZoC,QAAQC,IAAIE,EAAmBvC,IAG3BQ,EAAmB+B,GACnBc,EAAed,GAEhBkB,EAA2BlB,EAAkBvC,GAAOrB,MAAM4D,EAAkBvC,GAAOJ,gBAAgB2C,EAAkBvC,GAAOL,SA6CEyF,CAAcpF,IAAQhB,MAAO,CAACI,OAAO,WAAxD,UAAqEO,EAAQ0F,aAA7E,OAC3G,uBAAM,qBAAKrG,MAAO,CAACC,OAAO,kBAAmBK,aAAa,MAAOE,QAAQ,QAAnE,SAGN,sBAAKR,MAAO,CAACO,QAAQ,OAAO+F,cAAc,UAA1C,UAE8B,IAAhC3F,EAAQ4F,cAAc1D,QAAe,cAACnC,EAAD,CAEnCV,MAASW,EAAQX,MAAMW,EAAQX,MAAM,GACrCW,QAAWA,EAAQA,QACnBC,gBAAmBD,EAAQC,gBAC3BjB,MAASgB,EAAQhB,MACjBkB,cAAe,SAACjB,GAAD,OAAUiB,EAAcjB,EAAOoB,EAAML,EAAQhB,MAAMgB,EAAQC,gBAAgBK,MAAK,SAAAuC,GAAc,OAAEA,IAAiB5D,OAChIkB,eAAgBH,EAAQG,gBANjBE,GAUNL,EAAQ4F,cAAcxF,KAAI,SAACyF,EAAmBC,GAAU,OAAO,sBAAKzG,MAAO,CAACmD,MAAM,OAAQ1C,YAAY,QAAvC,UAEhE+F,EAAmBE,gBACpB,uBACC,uBAED,cAAChG,EAAD,CAECV,MAASW,EAAQX,MAAMW,EAAQX,MAAM,GACrCW,QAAW6F,EAAmB7F,QAC9BC,gBAAmBD,EAAQC,gBAC3BjB,MAASgB,EAAQhB,MACjBkB,cAAe,SAACjB,GAAD,OAAUiB,EAAcjB,EAAOoB,EAAML,EAAQhB,MAAMgB,EAAQC,gBAAgBK,MAAK,SAAAuC,GAAc,OAAEA,IAAiB5D,OAChIkB,eAAgBH,EAAQG,gBANjB2F,oBAoBR,qBAAKzG,MAAO,CAACyD,MAAM,eAKzB,qBAAKzD,MAAO,CAACyD,MAAM,cA9DDS,GCvHHyC,4BAAW,SAACC,EAAMC,GACjC,IAAKC,EAAoDF,EAApDE,4CAA4C9G,EAAQ4G,EAAR5G,MACjD+G,8BAAoBF,GAAK,iBAAO,CAE7BG,qBAF6B,SAERxE,GACnBY,QAAQC,IAAIb,GACZE,EAAaF,QAIlB,MAA0BnB,mBAAUQ,KAAKC,MAAMC,aAAaC,QAAQ,YAAeH,KAAKC,MAAMC,aAAaC,QAAQ,YAAnC,IAAhF,mBAAKC,EAAL,KAAcgF,EAAd,KACA,EAAwC5F,mBAASU,aAAaC,QAAQ,kBAAkBD,aAAaC,QAAQ,kBAAkB,WAA/H,mBAAKE,EAAL,KAAqBC,EAArB,KACC,EAAgCd,qBAAhC,mBAAK6F,EAAL,KAAiBC,EAAjB,KACE,EAAsB9F,oBAAS,GAA/B,mBAAK+F,EAAL,KACA,GADA,KAC8B/F,mBAASgG,KAAKC,QAA5C,mBAAeC,GAAf,WACKC,EAAgB,CAAC,CACpB,CAACnB,aAAa,aAAaE,cAAc,GAAG5F,QAAQ,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKhB,MAAM,UAAUiB,gBAAgB,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKE,eAAe,GAAGd,MAAM,CAACO,QAAQ,OAAQkH,oBAAoB,iBAAiBC,QAAQ,MAAMvE,MAAM,OAAQ1C,YAAY,OAAQyC,MAAM,UAC1X,CAACmD,aAAa,eAAeE,cAAc,GAAG5F,QAAQ,CAAC,IAAI,IAAI,IAAI,IAAI,KAAKhB,MAAM,cAAciB,gBAAgB,CAAC,IAAI,IAAI,IAAI,IAAI,KAAKE,eAAe,GAAGd,MAAM,CAACO,QAAQ,OAAQkH,oBAAoB,iBAAiBC,QAAQ,MAAMvE,MAAM,OAAQ1C,YAAY,OAAQyC,MAAM,UAC1Q,CAACmD,aAAa,aAAaE,cAAc,GAAG5F,QAAQ,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKhB,MAAM,UAAUiB,gBAAgB,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKE,eAAe,GAAGd,MAAM,CAACO,QAAQ,OAAQkH,oBAAoB,iBAAiBC,QAAQ,MAAMvE,MAAM,OAAQ1C,YAAY,OAAQyC,MAAM,UAC1X,CAACmD,aAAa,UAAUE,cAAc,CAAC,CAACG,gBAAgB,kBAAkB/F,QAAQ,CAAC,IAAI,KAAK,KAAK,MAAM,OAAOA,QAAQ,CAAC,IAAI,KAAK,KAAK,MAAM,KAAKhB,MAAM,YAAYiB,gBAAgB,CAAC,KAAKE,eAAe,GAAGd,MAAM,CAACO,QAAQ,OAAQkH,oBAAoB,iBAAiBC,QAAQ,MAAMvE,MAAM,OAAQ1C,YAAY,OAAQyC,MAAM,WAC5T,CACA,CAACmD,aAAa,SAAUE,cAAc,GAAG5F,QAAQ,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,KAAK,MAAM,KAAK,MAAM,MAAMhB,MAAM,UAAUiB,gBAAgB,GAAGE,eAAe,GAAGd,MAAM,CAACO,QAAQ,OAAQkH,oBAAoB,iBAAiBC,QAAQ,MAAMvE,MAAM,OAAQ1C,YAAY,OAAQyC,MAAM,UAClW,CAACmD,aAAa,cAAeE,cAAc,GAAG5F,QAAQ,CAAC,IAAI,KAAK,OAAO,KAAK,IAAI,KAAK,MAAM,KAAK,KAAK,OAAO,KAAK,KAAK,IAAI,KAAK,MAAM,IAAI,KAAK,KAAK,KAAK,OAAO,KAAK,IAAI,KAAK,KAAK,KAAKhB,MAAM,cAAciB,gBAAgB,GAAGE,eAAe,GAAGd,MAAM,CAACO,QAAQ,OAAQkH,oBAAoB,iBAAiBC,QAAQ,MAAMvE,MAAM,OAAQ1C,YAAY,OAAQyC,MAAM,UAClW,CAACmD,aAAa,oBAAqBE,cAAc,GAAG5F,QAAQ,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMhB,MAAM,UAAUiB,gBAAgB,GAAGE,eAAe,GAAGd,MAAM,CAACO,QAAQ,OAAQkH,oBAAoB,iBAAiBC,QAAQ,MAAMvE,MAAM,OAAQ1C,YAAY,OAAQyC,MAAM,UACjS,CAACmD,aAAa,eAAgBE,cAAc,GAAG5F,QAAQ,GAAGhB,MAAM,YAAYiB,gBAAgB,GAAGE,eAAe,GAAGd,MAAM,CAACO,QAAQ,OAAQkH,oBAAoB,iBAAiBC,QAAQ,MAAMvE,MAAM,OAAQ1C,YAAY,OAAQyC,MAAM,WACnO,CACA,CAACmD,aAAa,sBAAuBE,cAAc,GAAG5F,QAAQ,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMhB,MAAM,UAAUiB,gBAAgB,GAAGE,eAAe,GAAGd,MAAM,CAACO,QAAQ,OAAQkH,oBAAoB,iBAAiBC,QAAQ,MAAMvE,MAAM,OAAQ1C,YAAY,OAAQyC,MAAM,UACzR,CAACmD,aAAa,sBAAuBE,cAAc,GAAG5F,QAAQ,CAAC,MAAM,KAAK,MAAM,MAAM,MAAM,KAAK,KAAK,MAAM,MAAM,KAAK,MAAM,MAAM,MAAMhB,MAAM,cAAciB,gBAAgB,GAAGE,eAAe,GAAGd,MAAM,CAACO,QAAQ,OAAQkH,oBAAoB,iBAAiBC,QAAQ,MAAMvE,MAAM,OAAQ1C,YAAY,OAAQyC,MAAM,UACpT,CAACmD,aAAa,SAAUE,cAAc,GAAG5F,QAAQ,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMhB,MAAM,UAAUiB,gBAAgB,GAAGE,eAAe,GAAGd,MAAM,CAACO,QAAQ,OAAQkH,oBAAoB,iBAAiBC,QAAQ,MAAMvE,MAAM,OAAQ1C,YAAY,OAAQyC,MAAM,UAClQ,CAACmD,aAAa,eAAgBE,cAAc,GAAG5F,QAAQ,GAAGhB,MAAM,YAAYiB,gBAAgB,GAAGE,eAAe,GAAGd,MAAM,CAACO,QAAQ,OAAQkH,oBAAoB,iBAAiBC,QAAQ,MAAMvE,MAAM,OAAQ1C,YAAY,OAAQyC,MAAM,WACnO,CACA,CAACmD,aAAa,uBAAwBE,cAAc,GAAG5F,QAAQ,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAOhB,MAAM,UAAUiB,gBAAgB,GAAGE,eAAe,GAAGd,MAAM,CAACO,QAAQ,OAAQkH,oBAAoB,iBAAiBC,QAAQ,MAAMvE,MAAM,OAAQ1C,YAAY,OAAQyC,MAAM,UAClR,CAACmD,aAAa,cAAeE,cAAc,GAAG5F,QAAQ,CAAC,KAAK,OAAO,KAAK,OAAO,KAAK,KAAK,KAAK,MAAM,KAAK,KAAK,OAAO,KAAK,KAAK,KAAK,KAAK,MAAM,KAAK,KAAK,KAAK,OAAO,KAAK,KAAK,MAAMhB,MAAM,cAAciB,gBAAgB,GAAGE,eAAe,GAAGd,MAAM,CAACO,QAAQ,OAAQkH,oBAAoB,iBAAiBC,QAAQ,MAAMvE,MAAM,OAAQ1C,YAAY,OAAQyC,MAAM,UAChW,CAACmD,aAAa,sBAAuBE,cAAc,GAAG5F,QAAQ,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMhB,MAAM,UAAUiB,gBAAgB,GAAGE,eAAe,GAAGd,MAAM,CAACO,QAAQ,OAAQkH,oBAAoB,iBAAiBC,QAAQ,MAAMvE,MAAM,OAAQ1C,YAAY,OAAQyC,MAAM,UACpR,CAACmD,aAAa,eAAgBE,cAAc,GAAG5F,QAAQ,GAAGhB,MAAM,YAAYiB,gBAAgB,GAAGE,eAAe,GAAGd,MAAM,CAACO,QAAQ,OAAQkH,oBAAoB,iBAAiBC,QAAQ,MAAMvE,MAAM,OAAQ1C,YAAY,OAAQyC,MAAM,WACnO,CACC,CAACmD,aAAa,eAAgBE,cAAc,GAAG5F,QAAQ,CAAC,KAAK,KAAK,KAAK,MAAMhB,MAAM,UAAUiB,gBAAgB,GAAGE,eAAe,GAAGd,MAAM,CAACO,QAAQ,OAAQkH,oBAAoB,iBAAiBC,QAAQ,MAAMvE,MAAM,OAAQ1C,YAAY,OAAQyC,MAAM,UACpP,CAACmD,aAAa,aAAcE,cAAc,GAAG5F,QAAQ,CAAC,KAAK,KAAK,KAAK,MAAMhB,MAAM,cAAciB,gBAAgB,GAAGE,eAAe,GAAGd,MAAM,CAACO,QAAQ,OAAQkH,oBAAoB,iBAAiBC,QAAQ,MAAMvE,MAAM,OAAQ1C,YAAY,OAAQyC,MAAM,UACtP,CAACmD,aAAa,sBAAuBE,cAAc,GAAG5F,QAAQ,CAAC,MAAM,OAAOhB,MAAM,UAAUiB,gBAAgB,GAAGE,eAAe,GAAGd,MAAM,CAACO,QAAQ,OAAQkH,oBAAoB,iBAAiBC,QAAQ,MAAMvE,MAAM,OAAQ1C,YAAY,OAAQyC,MAAM,UACnP,CAACmD,aAAa,eAAgBE,cAAc,GAAG5F,QAAQ,GAAGhB,MAAM,YAAYiB,gBAAgB,GAAGE,eAAe,GAAGd,MAAM,CAACO,QAAQ,OAAQkH,oBAAoB,iBAAiBC,QAAQ,MAAMvE,MAAM,OAAQ1C,YAAY,OAAQyC,MAAM,YAGtO,EAAwC7B,mBAASmG,GAAjD,mBAAKG,EAAL,KAAoBC,EAApB,KAEEC,EAAuB,GACvBC,EAA0B,GAC3BvD,EAAa,YAAIoD,GAAgB5G,KAAI,SAACgH,EAAiB/G,GAC1D,IAAIgH,EAAK,GASV,OARCD,EAAiBhH,KAAI,SAAAkH,GACpBD,EAAIC,EAAStI,OAAQ,CAACgB,QAAQsH,EAAStH,YAGzCmH,EAAwBI,KAAKF,GAC7BD,EAAmBA,EAAiBhH,KAAI,qBAAEH,mBAAoC4D,UAMpDmD,EAAenD,KAAK,GACzBzD,KAAI,SAAAoH,GACxB,IAAIC,EAAoB,sBAASP,EAAsBM,EAAaxI,QAAUkI,EAAsBM,EAAaxI,OAAOiB,gBAAgBiH,EAAsBM,EAAaxI,OAAOiB,gBAAgB,IAA1K,YAAiLuH,EAAavH,kBAClNY,EAAoB,IAAI6G,IAAID,GAC/BA,EAAqBE,MAAMC,KAAK/G,GAChC,IAAIgH,EAAY,sBAASX,EAAsBM,EAAaxI,QAAUkI,EAAsBM,EAAaxI,OAAOgB,QAAQkH,EAAsBM,EAAaxI,OAAOgB,QAAQ,IAA1J,YAAiKwH,EAAaxH,UAC3L8H,EAAY,IAAIJ,IAAIG,GACvBA,EAAaF,MAAMC,KAAKE,GACxBZ,EAAsBM,EAAaxI,OAAS,CAACiB,gBAAgBwH,MAK9D,MAA+C/G,mBAAS,YAAIkD,IAA5D,mBAAKmE,EAAL,KAAwBC,EAAxB,KACA,EAA0DtH,mBAASwG,GAAnE,mBAAKe,EAAL,KAA+BC,EAA/B,KAaI9E,EAA4B,SAACpE,EAAMiB,EAAgB2D,GACrDnB,QAAQC,IAAI1D,EAAMiB,GACnB,IAAIkI,EAA8B,eAAMF,GACrCJ,EAAa,GAAD,mBAAKM,EAA+BnJ,GAAOiB,iBAA3C,YAA8DA,IAGlD,IAAzBA,EAAgBiC,QAAc0B,IAC/BiE,EAAcA,EAAa9D,QAAO,SAAA9E,GAChC,OAAQ2E,EAAWtD,MAAK,SAAA8H,GAAO,OAAEA,IAAUnJ,QAE7CwD,QAAQC,IAAImF,IAGb,IAAIC,EAAY,IAAIJ,IAAIG,GACxBA,EAAaF,MAAMC,KAAKE,GACxBK,EAA+BnJ,GAAS,CAACiB,gBAAgB4H,GACzDK,EAA0BC,GAC1BE,EAAyCF,IAIvC7E,EAAuB,SAACtE,EAAMC,GAElC,IAAIkJ,EAA8B,eAAMF,GACpCJ,EAAa,YAAMM,EAA+BnJ,GAAOiB,iBAEvDI,EAAQwH,EAAaS,QAAQrJ,GAC/BoB,GAAS,GACZwH,EAAaU,OAAOlI,EAAO,GAEzB,IAAIyH,EAAY,IAAIJ,IAAIG,GACzBA,EAAaF,MAAMC,KAAKE,GACxBK,EAA+BnJ,GAAS,CAACiB,gBAAgB4H,GAC3DK,EAA0BC,GAC1BE,EAAyCF,IA0BrCE,EAA2C,SAACJ,GAE7C,IAAInG,EAAY,GAChB,IAAI,IAAI0G,KAAKP,EAA2B,CAEpC,IAAIzH,EAAgB,CAACR,QAAQiI,EAA0BO,GAAGvI,gBAAgBjB,MAAMwJ,EAAEvI,gBAAgB,GAAGE,eAAe,GAAGd,MAAM,CAACO,QAAQ,OAAQkH,oBAAoB,iBAAiBC,QAAQ,MAAMvE,MAAM,OAAQ1C,YAAY,SAC3NgC,EAAYyF,KAAK/G,GAGxB2F,EAA4CrE,IAsCxCC,EAAe,SAACwE,GACnB,IAaQkC,EAbJzB,EAAiB,IACrBJ,EAAYF,KAAKC,OACjBvF,aAAasH,QAAQ,iBAAkBnC,GACvC/E,EAAkB+E,GAEF,YAAbA,IACDU,EAAkBJ,GAClBG,EAAe,GAAD,OAAKH,GACnBmB,EAAsBnB,IACnB,WACD,IAAI8B,EAAczH,KAAKC,MAAMC,aAAaC,QAAQkF,IAAc1E,OACrEY,QAAQC,IAAIiG,GACX,IAAIC,EAAmB,UAAM/B,GAC9B,IAAS4B,EAAI,EAAGA,EAAIG,EAAoB1G,OAAQuG,IAAK,CACnD,IAAII,EAAmB,YAASD,EAAoBH,IACrDI,EAAoBA,EAAmBzI,KAAI,SAAA0I,GAC1C,IAAIC,EAAoB,eAAOD,GAG/B,OADAC,EAAqB9I,gBAArB,YAA0C0I,EAAYI,EAAqB/J,OAAOiB,gBAAgB8D,QAAO,SAAAiF,GAAiB,OAAED,EAAqB/I,QAAQiJ,SAASD,OAC3JD,KAEPH,EAAoBH,GAAII,EAEzBpG,QAAQC,IAAIkG,GACZ5B,EAAe,YAAI4B,GACpB3B,EAAkB,YAAI2B,IAhBhB,GAoBL,IAAI1B,EAAuB,GACvBC,EAA0B,GAC3BvD,EAAa,YAAIoD,GAAgB5G,KAAI,SAACgH,EAAiB/G,GAC1D,IAAIgH,EAAK,GASV,OARCD,EAAiBhH,KAAI,SAAAkH,GACpBD,EAAIC,EAAStI,OAAQ,CAACgB,QAAQsH,EAAStH,YAGzCmH,EAAwBI,KAAKF,GAC7BD,EAAmBA,EAAiBhH,KAAI,qBAAEH,mBAAoC4D,UAMpDmD,EAAenD,KAAK,GACzBzD,KAAI,SAAAoH,GACxB,IAAIC,EAAoB,sBAASP,EAAsBM,EAAaxI,QAAUkI,EAAsBM,EAAaxI,OAAOiB,gBAAgBiH,EAAsBM,EAAaxI,OAAOiB,gBAAgB,IAA1K,YAAiLuH,EAAavH,kBAClNY,EAAoB,IAAI6G,IAAID,GAC/BA,EAAqBE,MAAMC,KAAK/G,GAChC,IAAIgH,EAAY,sBAASX,EAAsBM,EAAaxI,QAAUkI,EAAsBM,EAAaxI,OAAOgB,QAAQkH,EAAsBM,EAAaxI,OAAOgB,QAAQ,IAA1J,YAAiKwH,EAAaxH,UAC3L8H,EAAY,IAAIJ,IAAIG,GACvBA,EAAaF,MAAMC,KAAKE,GACxBZ,EAAsBM,EAAaxI,OAAS,CAACiB,gBAAgBwH,MAK9DO,EAAsB,YAAIpE,IAC1BsE,EAA0BhB,GACzBmB,EAAyCnB,GAC1CN,EAAYF,KAAKC,QAyBjB,OAnBD3C,qBAAU,WACL,IAAIlC,EAAY,GAClB,IAAI,IAAI0G,KAAKtB,EAAuB,CAEhC,IAAI1G,EAAgB,CAACR,QAAQkH,EAAsBsB,GAAGvI,gBAAgBjB,MAAMwJ,EAAEvI,gBAAgB,GAAGE,eAAe,GAAGd,MAAM,CAACO,QAAQ,OAAQkH,oBAAoB,iBAAiBC,QAAQ,MAAMvE,MAAM,OAAQ1C,YAAY,SACvNgC,EAAYyF,KAAK/G,GAGxBY,aAAasH,QAAQ,UAAWxH,KAAKgI,UAAU,CAACrH,OAAOoG,EAA0BnG,iBACjF,IAAIqH,EAAU/H,aAAaC,QAAQ,kBAKjC8H,EAJGA,GAAuB,SAAZA,EAIJ/H,aAAaC,QAAQ,kBAFrB,UAIVU,EAAaoH,KAEX,IACI,sBAAK9J,MAAOA,GAAa,GAAzB,UACC,gCACE,yBAAQoC,KAAK,SAASC,MAAOH,EAAgBI,SAAU,SAACC,GAAD,OAAKG,EAAaH,EAAEI,OAAON,QAAlF,UACE,wBAAQA,MAAO,UAAf,qBACCJ,EAAQlB,KAAI,SAAAyB,GAAM,OAAE,wBAAQH,MAAOG,EAAf,SAAwBA,UAE9C,uBAAOuH,KAAK,OAAO1H,MAAO6E,EAAY5E,SAAU,SAACC,GAAD,OAAK4E,EAAc5E,EAAEI,OAAON,UAC7E,wBAAQxC,QA/HF,WAChB,IAGI,IAAI4C,EAAY,GAClB,IAAI,IAAI0G,KAAKP,EAA2B,CAEpC,IAAIzH,EAAgB,CAACR,QAAQiI,EAA0BO,GAAGvI,gBAAgBjB,MAAMwJ,EAAEvI,gBAAgB,GAAGE,eAAe,GAAGd,MAAM,CAACO,QAAQ,OAAQkH,oBAAoB,iBAAiBC,QAAQ,MAAMvE,MAAM,OAAQ1C,YAAY,SAC3NgC,EAAYyF,KAAK/G,GAExB,IAAIc,EAAQF,aAAaC,QAAQ,WACjCC,EAAUJ,KAAKC,MAAMG,GAAYJ,KAAKC,MAAMG,GAAd,GAC9BA,EAASqG,MAAMC,KAAK,IAAIF,IAAJ,sBAAYpG,GAAZ,CAAoBiF,MACxCnF,aAAasH,QAAQ,UAAUxH,KAAKgI,UAAU5H,IAC9CF,aAAasH,QAAQ,iBAAkBnC,GACvC/E,EAAkB+E,GAClBD,EAAWhF,GACXF,aAAasH,QAAQnC,EAAYrF,KAAKgI,UAAU,CAACrH,OAAOoG,EAA0BnG,iBAC/E,MAAOuH,GACPC,MAAMD,KA4GE,4BACA,wBAAQnK,QAzGA,WACjBkC,aAAamI,WAAWhI,GACzBH,aAAasH,QAAQ,iBAAkB,IACvClH,EAAkB,MAClB,IAAIgI,EAAU,YAAKlI,GACnBkI,EAAUjB,OAAOiB,EAAUlB,QAAQ/G,GAAgB,GACnDH,aAAasH,QAAQ,UAAUxH,KAAKgI,UAAUM,IAC9ClD,EAAWkD,GACXzH,EAAa,YAiGH,8BAIH,sBAAK1C,MAAO,CAACE,UAAU,SAASG,WAAW,MAAMuC,SAAS,QAA1D,UAEF8F,EAAmBlE,KAAK,GAAG3B,OAFzB,eAIN,qBAAK7C,MAAO,CAAEgD,OAAO,OAAQC,UAAU,QAAvC,UACCmE,GAASO,EAAe5G,KAAI,SAAC+C,EAAc9C,GAAf,OAAuB,cAAC4C,EAAD,CAAgBM,SAAUlD,EAAO8C,cAAeA,EAAeG,uBAAwBA,EAAwBF,0BAA2BA,EAA2BC,mCAAoC,SAACoG,GAAD,OA9KtN,SAACA,EAAUpJ,GAClD,IAAI8H,EAA8B,eAAMF,GAEtCJ,EAAc,GACZ,IAAI,IAAIW,KAAKP,EAA2B,CAG9CJ,EAFuB,SAAZ4B,EAEG,YAAItB,EAA+BK,GAAGvI,iBAAiB8D,QAAO,SAAA9E,GAC1E,OAAQkI,EAAwB9G,GAAOmI,GAAGxI,QAAQM,MAAK,SAAA8H,GAAO,OAAEA,IAAUnJ,QAK/D,GAAD,mBAAOkJ,EAA+BK,GAAGvI,iBAAzC,YAA6DkH,EAAwB9G,GAAOmI,GAAGxI,UAExG,IAAI8H,EAAY,IAAIJ,IAAIG,GACzBA,EAAaF,MAAMC,KAAKE,GACxBK,EAA+BK,GAAK,CAACvI,gBAAgB4H,GAGrDK,EAA0BC,GAC1BE,EAAyCF,GAyJiO9E,CAAmCoG,EAAUpJ,IAAQ6C,sBAAuB,SAACvC,GAAD,OA5N7T,SAACV,EAAgBI,GACzCoC,QAAQC,IAAIzC,EAAgBI,GAC3B,IAAIqJ,EAAuB,YAAO3B,GAClC2B,EAAwBrJ,GAASJ,EAGrC+H,EAAsB0B,GAsNkVxG,CAAsBvC,EAAaN,iBC1P5XsJ,MA7Cf,WAEA,MAAuCjJ,mBAAS,IAAhD,mBAAKF,EAAL,KAAmBoJ,EAAnB,KAEA,EAAyClJ,mBAAS,gBAAlD,mBAAKmJ,EAAL,KAAoBC,EAApB,KACMC,EAAWC,mBAKhB,OAAO,gCAEa,iBAAjBH,GAAiC,qBAAKxK,MAAO,CAACgD,OAAO,QAAUzC,QAAS,OAC3EqK,eAAgB,SAChBC,WAAY,UAFwB,SAGhC,gCAAM,qBAAK7K,MAAO,CAACC,OAAQ,kBAAkBG,OAAO,UAAUI,QAAQ,QAASX,QAAS,kBAAI4K,EAAkB,uBAAxG,wBAA+I,qBAAKzK,MAAO,CAACC,OAAQ,kBAAkBG,OAAO,UAAUI,QAAQ,QAAUX,QAAS,kBAAI4K,EAAkB,kBAAzG,8BAEzJ,sBAAKzK,MAAO,CAAC+C,OAAO,YAAaG,MAAM,OAAvC,UACE,qBAAKlD,MAAO,CAACO,QAAQ,gBAArB,SACE,qBAAKuK,IAAI,qEAAqEC,IAAI,WAAW7H,MAAM,WAEpF,kBAAjBsH,GAAoC,qBAAKxK,MAAO,CAACmD,MAAM,QAAQ5C,QAAQ,eAAeH,OAAO,WAAaP,QAAS,kBAAI4K,EAAkB,uBAArG,SAClC,qBAAKK,IAAI,oEAAoEC,IAAI,eAAe7H,MAAM,WAEnF,uBAAjBsH,GAAyC,qBAAKxK,MAAO,CAACmD,MAAM,QAAQ5C,QAAQ,eAAeH,OAAO,WAAYP,QAAS,kBAAI4K,EAAkB,kBAApG,SAC3C,qBAAKK,IAAI,kEAAkEC,IAAI,eAAe7H,MAAM,WAGpG,qBAAKlD,MAAO,CAACyD,MAAM,aAGC,kBAAjB+G,GAAmC,cAACtJ,EAAD,CAAmBE,iBAzB5C,SAAC4J,GAEnBN,EAASO,QAAQjE,qBAAqBgE,IAuB0D7J,cAAeA,IAI3G,cAAC+J,EAAD,CAAqBrE,IAAK6D,EAAU1K,MAAO,CAACO,QAAyB,kBAAjBiK,EAAiC,OAAO,UAAW1D,4CAA6CyD,QClCxJY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrF,SAASC,eAAe,W","file":"static/js/main.2fb73e98.chunk.js","sourcesContent":["export default function LetterButton({color,letter,onClick,selected,blocked,style={}}) {\n \n  style = {\n   border:'1px solid black',\n   textAlign:'center',\n   backgroundColor:blocked?'grey':`rgba(${color},${selected?'1':'0.4'})`,\n   cursor: blocked?'no-drop':'pointer',\n   fontWeight:600,\n   borderRadius:\"10px\",\n   display: 'inline-block',\n   padding:'5px 10px',\n   marginRight:'10px',\n   ...style\n }\n return <div><div style={style} onClick={()=>blocked?null:onClick(letter)}>{letter}</div></div>\n}\n \n\n","import LetterButton from \"./LetterButton\";\nexport default function Container({letters,selectedLetters,color,onLetterClick,blockedLetters,style}) {\n \n \n return <div style={style?style:{}}>{letters.map((letter,index)=>{return  <LetterButton\n       key={index}\n       color={color}\n       letter={letter}\n       selected={selectedLetters.some(selectedLetters=>{return selectedLetters===letter})}\n       blocked={blockedLetters.some(blockedLetters=>{return blockedLetters===letter})}\n       onClick={onLetterClick}\n     ></LetterButton> })}</div>\n}\n\n","import Container from \"./Container\";\nimport {useState} from 'react'\nexport default function MainContainer({lettersConfig,style,emitChoosePreset}) {\n let [lettersArray,setLettersArray] = useState([...lettersConfig])\n let [selectedLetters,setSelectedLetters] = useState([])\n let [wordDisplayed,setWordDisplayed] = useState([])\n let [wordHistory,setWordHistory]= useState([])\n  let [presets ,setPresets]=useState(!JSON.parse(localStorage.getItem('presets'))?[]:JSON.parse(localStorage.getItem('presets')))\nlet [selectedPreset ,setSelectedPreset]=useState(localStorage.getItem('selectedPreset'));\n let onLetterClick= (letter,index)=>{\n \n  \n \n  \n   console.log(letter,index)\n   let cloneWordDisplayed= [...wordDisplayed]\n \n \n   let cloneLettersArray = [...lettersArray]\n \nif(lettersArray[index].selectedLetters.some(selectedLetter=>selectedLetter===letter)){\n \n      cloneLettersArray[index].selectedLetters = []\n      cloneWordDisplayed[index]=''\n   }else{\ncloneLettersArray[index].selectedLetters = [letter]\n cloneWordDisplayed[index]=letter\n   }\n   setSelectedLetters(cloneLettersArray)\nsetWordHistory([...wordHistory,cloneWordDisplayed.join('')])\n   setWordDisplayed(cloneWordDisplayed)\n  \n \n }\n \n let choosePreset=(preset)=>{\n   setSelectedPreset(preset)\n   emitChoosePreset(preset)\n   let lettersArray= JSON.parse(localStorage.getItem(preset))\n  \nsetLettersArray(lettersArray.transformed)\n  \n \n  \n }\n return <div style={style? style:{}}>\n    <select name=\"preset\" value={selectedPreset} onChange={(e)=>choosePreset(e.target.value)}>\n             <option value={'Default'}>Default</option>\n             {presets.map(preset=><option value={preset}>{preset}</option>)}\n            </select>\n   <div style={{textAlign:'center',fontWeight:'600',fontSize:\"80px\"}}>\n    \n     {wordDisplayed.length === 0 || wordDisplayed.join() ===''  ? 'Start Typing...':wordDisplayed.join('')}\n   </div>\n   <div style={{margin:\"20px\",height:\"78vh\", overflowY:\"auto\"}}>\n \n<div style={{ width:'90%', float:\"left\",textAlign:'center'}}>\n<div style={{display: 'inline-block'}}>\n    {lettersArray.map((letters,index)=>{return <Container\n       key = {index}\n       style = {letters.style?letters.style:{}}\n       letters = {letters.letters}\n       selectedLetters = {letters.selectedLetters}\n       color = {letters.color}\n       onLetterClick={(letter)=>onLetterClick(letter,index)}\n       blockedLetters={letters.blockedLetters}\n       >\n     </Container>})\n    \n     }\n      <div style={{clear:'both'}}></div>\n     </div>\n   \n</div>\n<div style={{   float:\"left\",display: 'inline-block'}}>\n   {[...wordHistory].reverse().map(word=>{return <p style={{fontWeight:'600', fontSize:'30px'}}>{word}</p>})}\n</div>\n<div style={{clear:'both'}}></div>\n   </div>\n  \n    \n   \n </div>\n}\n \n\n","import LetterButton from \"./LetterButton\";\nimport {useState, useEffect} from 'react'\nimport Container from \"./Container\";\n \nexport default function SelectionBlock({getAllSelectedLetters,initialConfig,getSelectedLettersByColor,getSelectedAllOrNoneLettersByColor,desSelectLetterByColor,uniqueId}) {\n \n let [lettersArray,setLettersArray] = useState(\ninitialConfig)\n let [selectedLetters,setSelectedLetters] = useState([])\n let [calculateH,setCalculateH] = useState(false)\n \n let emitAllLetters=(allLettersArray)=>{\n   //console.log(lettersArray)\nlet allLetters = [...allLettersArray].map(({selectedLetters})=>{\n//console.log(selectedLetters)\nreturn selectedLetters\n})\nallLetters= allLetters.flat(1)\n//console.log(allLetters)\n   getAllSelectedLetters(allLetters)\n}\n \nlet emitSelectedLettersByColor=(color,selectedLetters,allLetters)=>{\n   getSelectedLettersByColor(color,selectedLetters,allLetters)\n}\n \n let onLetterClick= (letter,index,color,selected)=>{\n   //console.log(letter,index)\n   let cloneLettersArray = [...lettersArray]\n     if(lettersArray[index].selectedLetters.some(selectedLetter=>selectedLetter===letter)){\n           cloneLettersArray[index].selectedLetters = cloneLettersArray[index].selectedLetters.filter(selectedLetter=>selectedLetter!==letter)      \n         }else{\n     cloneLettersArray[index].selectedLetters = [...cloneLettersArray[index].selectedLetters,letter]\n         }\n        \n         setSelectedLetters(cloneLettersArray)\n         emitAllLetters(cloneLettersArray)\n         if(!selected){\n           emitSelectedLettersByColor(color,cloneLettersArray[index].selectedLetters)\n         }else{\ndesSelectLetterByColor(color,letter)\n         }\n       \n        \n \n }\n let selectAll= ()=>{\n      let cloneLettersArray = [...lettersArray]\n      cloneLettersArray.map(letterArrayObj=>{\n     letterArrayObj.selectedLetters = [...letterArrayObj.letters]\n  \n   \n \nreturn letterArrayObj\n      })\n        setSelectedLetters(cloneLettersArray)\n        emitAllLetters(cloneLettersArray)\n          getSelectedAllOrNoneLettersByColor('all')\n }\n \n   let selectNone= ()=>{\n      let cloneLettersArray = [...lettersArray]\n      cloneLettersArray.map(letterArrayObj=>{\nletterArrayObj.selectedLetters = []\n \nreturn letterArrayObj\n      })\n        setSelectedLetters(cloneLettersArray)\n        emitAllLetters(cloneLettersArray)\n        getSelectedAllOrNoneLettersByColor('none')\n }\n \n let selectByIndex= (index)=>{\n \n        let cloneLettersArray = [...lettersArray]\n     \n   if( cloneLettersArray.[index].selectedLetters.length === [... cloneLettersArray.[index].letters].length){\ncloneLettersArray.[index].selectedLetters =[]\n   }else{\n     cloneLettersArray.[index].selectedLetters = [... cloneLettersArray.[index].letters]\n   }\n \n    console.log(index)\n    console.log(cloneLettersArray.[index])\n   \n \n        setSelectedLetters(cloneLettersArray)\n        emitAllLetters(cloneLettersArray)\n        //alert(JSON.stringify( cloneLettersArray[index].selectedLetters))\n       emitSelectedLettersByColor(cloneLettersArray[index].color,cloneLettersArray[index].selectedLetters,cloneLettersArray[index].letters)\n          //getSelectedAllOrNoneLettersByColor('all')\n }\n useEffect(() => {\n setLettersArray(initialConfig);\n}, [initialConfig]);\nuseEffect(() => {\n  function debounce(func, wait, immediate) {\n var timeout;\n \n return function executedFunction() {\n   var context = this;\n   var args = arguments;\n    \n   var later = function() {\n     timeout = null;\n     if (!immediate) func.apply(context, args);\n   };\n \n   var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n \n   timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n };\n};\n \nvar returnedFunction = debounce(function() {\n   setCalculateH(!calculateH)\n}, 500);\n \nwindow.addEventListener('resize', returnedFunction)})\n return <div key={uniqueId}>\n   <div id={'container-'+uniqueId} style={{margin:\"20px\",position: 'relative'}}>\n \n \n <div style={{marginTop:(document.getElementById('container-'+uniqueId)?.clientHeight/2)-20 + 'px', width:'9%',float:\"left\"}}>\n   <LetterButton letter=\"None\" onClick={selectNone} style={{float:'right'}}></LetterButton>\n  <LetterButton letter=\"All\" onClick={selectAll} style={{float:'right'}} ></LetterButton>\n   <div style={{clear:\"both\"}}></div >\n   </div>\n \n<div style={{ width:'90%', float:\"left\",textAlign:'center'}}>\n \n<div style={{display: 'inline-block'}}>\n     {lettersArray.map((letters,index)=>{return <div style={{float:'left', marginRight:'20px', textAlign:\"left\"}}><span onClick={()=>selectByIndex(index)} style={{cursor:\"pointer\"}}>{letters.categoryName} </span>\n       <br /><div style={{border:\"solid 2px green\", borderRadius:\"10%\", padding:\"20px\"}}>\n     \n  \n       <div style={{display:\"flex\",flexDirection:\"column\"}}>   \n    \n   { letters.subCategories.length ===0 && <Container\n       key = {index}\n       style = {letters.style?letters.style:{}}\n       letters = {letters.letters}\n       selectedLetters = {letters.selectedLetters}\n       color = {letters.color}\n       onLetterClick={(letter)=>onLetterClick(letter,index,letters.color,letters.selectedLetters.some(selectedLetter=>selectedLetter===letter))}\n       blockedLetters={letters.blockedLetters}\n       >\n     </Container>}\n    \n       {letters.subCategories.map((subCategoryletters,index2)=>{return <div style={{float:'left', marginRight:'20px'}}>\n   \n      {subCategoryletters.subCategoryName}\n      <br />\n       <br />\n     \n      <Container\n       key = {index2}\n       style = {letters.style?letters.style:{}}\n       letters = {subCategoryletters.letters}\n       selectedLetters = {letters.selectedLetters}\n       color = {letters.color}\n       onLetterClick={(letter)=>onLetterClick(letter,index,letters.color,letters.selectedLetters.some(selectedLetter=>selectedLetter===letter))}\n       blockedLetters={letters.blockedLetters}\n       >\n     </Container>\n    \n   \n    \n     </div>})}\n      </div>\n     </div></div>})\n     }\n \n \n    \n    \n      <div style={{clear:'both'}}></div>\n     </div>\n   \n</div>\n \n<div style={{clear:'both'}}></div>\n   </div>\n  \n    \n   \n </div>\n \n}\n\n","import {useState, useEffect,useImperativeHandle,forwardRef} from 'react'\nimport SelectionBlock from \"./SelectionBlock\";\nexport default forwardRef((props,ref)=> {\nlet {getTransformToMainContainerLetterArrayProps,style}= props\nuseImperativeHandle(ref, () => ({\n \n   choosePresetExternal(preset) {\n     console.log(preset)\n     choosePreset(preset);\n   }\n \n }));\nlet [presets ,setPresets]=useState(!JSON.parse(localStorage.getItem('presets'))?[]:JSON.parse(localStorage.getItem('presets')))\nlet [selectedPreset ,setSelectedPreset]=useState(localStorage.getItem('selectedPreset')?localStorage.getItem('selectedPreset'):'Default');\n let [presetName ,setPresetName]=useState()\n   let [reset ,setReset]=useState(false)\n   let [uniqueId, setUniqueId] = useState(Date.now())\n    let defaultConfigs= [[\n     {categoryName:\"Consonants\",subCategories:[],letters:['','b','c','d','f','g','h','j','k','l','m','n','p','r','s','t','v','w','y','z'],color:'0,0,255',selectedLetters:['','b','c','d','f','g','h','j','k','l','m','n','p','r','s','t','v','w','y','z'],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n     {categoryName:\"Short Vowels\",subCategories:[],letters:['e','i','o','u','y'],color:'79, 255, 67',selectedLetters:['e','i','o','u','y'],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(4,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n     {categoryName:\"Consonants\",subCategories:[],letters:['','b','c','d','f','g','h','j','k','l','m','n','p','r','s','t','v','w','y','z'],color:'255,0,0',selectedLetters:['','b','c','d','f','g','h','j','k','l','m','n','p','r','s','t','v','w','y','z'],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n     {categoryName:\"Endings\",subCategories:[{subCategoryName:\"subCategoryName\",letters:['e','ed','es','ing','s']}],letters:['e','ed','es','ing','s'],color:'255,0,255',selectedLetters:['e'],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}}\n   ],[\n     {categoryName:\"Blends\", subCategories:[],letters:['bl','br','cl','cr','dr','fl','fr','gl','gr','pl','pr','sc','scr','shr','sk','sl','sm','sn','sp','spl','squ','st','str','sw','thr','tr'],color:'0,0,255',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n     {categoryName:\"Long Vowels\", subCategories:[],letters:['a','ai','aigh','ay','e','ea','eau','ee','ei','eigh','ew','ey','i','ie','igh','o','oa','oe','oo','ough','ow','u','ue','ui','y'],color:'79, 255, 67',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(4,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n     {categoryName:\"Double Consonants\", subCategories:[],letters:['bb','dd','ff','gg','ll','mm','nn','pp','rr','ss','tt','zz'],color:'255,0,0',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n     {categoryName:\"categoryName\", subCategories:[],letters:[],color:'255,0,255',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}}\n   ],[\n     {categoryName:\"Consonant Diagraphs\", subCategories:[],letters:['ch','gh','gn','kn','ph','qu','sh','th','wh','wr'],color:'0,0,255',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n     {categoryName:\"r-Controlled Vowels\", subCategories:[],letters:['air','ar','are','ear','eer','er','ir','oar','oor','or','ore','our','ur'],color:'79, 255, 67',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(4,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n     {categoryName:\"Blends\", subCategories:[],letters:['mp','nd','ng','nk','nt','nx','sp','st'],color:'255,0,0',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n     {categoryName:\"categoryName\", subCategories:[],letters:[],color:'255,0,255',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}}\n   ],[\n     {categoryName:\"Consonant Triagraphs\", subCategories:[],letters:['scr','shr','spl','spr','squ','str','thr'],color:'0,0,255',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n     {categoryName:\"Vowel Teams\", subCategories:[],letters:['ai','aigh','au','augh','aw','ay','ea','eau','ee','ei','eigh','eu','ew','ey','ie','igh','oa','oe','oo','ough','ow','ue','ui'],color:'79, 255, 67',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(4,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n     {categoryName:\"Consonant Diagraphs\", subCategories:[],letters:['ch','ck','gh','gn','mb','ph','sh','th','ve'],color:'255,0,0',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n     {categoryName:\"categoryName\", subCategories:[],letters:[],color:'255,0,255',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}}\n   ],[\n      {categoryName:\"categoryName\", subCategories:[],letters:['gn','kn','wr','qu'],color:'0,0,255',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n      {categoryName:\"Diphthongs\", subCategories:[],letters:['oi','ou','ow','oy'],color:'79, 255, 67',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(4,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n      {categoryName:\"Consonant Tiagraphs\", subCategories:[],letters:['dge','tch'],color:'255,0,0',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}},\n      {categoryName:\"categoryName\", subCategories:[],letters:[],color:'255,0,255',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px', width:'300px'}}\n    ]]\n    \n   let [initialConfigs,setInitialConfigs] =useState(defaultConfigs)\n   //subCategories:[{subCategoryName:\"subcategoryName\", letters:[]}]\n let initialLettersByColor ={}\n let allLettersByColorAndRow = []\nlet allLetters = [...initialConfigs].map((initialConfigObj,index)=>{\n let obj= {}\n initialConfigObj.map(innerObj=>{\n  obj[innerObj.color]= {letters:innerObj.letters}\n \n})\nallLettersByColorAndRow.push(obj)\ninitialConfigObj = initialConfigObj.map(({selectedLetters})=>selectedLetters).flat()\n \n \nreturn initialConfigObj\n})\n//allLetters= allLetters.flat()\nlet allLettersConfigFlat= initialConfigs.flat(1)\nallLettersConfigFlat.map(letterConfig=>{\n let arraySelectedLetters =   [...initialLettersByColor[letterConfig.color] && initialLettersByColor[letterConfig.color].selectedLetters?initialLettersByColor[letterConfig.color].selectedLetters:[] ,...letterConfig.selectedLetters]\n let setSelectedLetters= new Set(arraySelectedLetters)\n  arraySelectedLetters=Array.from(setSelectedLetters)\n  let arrayLetters =   [...initialLettersByColor[letterConfig.color] && initialLettersByColor[letterConfig.color].letters?initialLettersByColor[letterConfig.color].letters:[] ,...letterConfig.letters]\n let setLetters= new Set(arrayLetters)\n  arrayLetters=Array.from(setLetters)\n  initialLettersByColor[letterConfig.color] = {selectedLetters:arraySelectedLetters}\n \n})\n \n \n let [allSelectedLetters,setAllSelectedLetters]=useState([...allLetters])\n let [allSelectedLettersByColor,setSelectedLettersByColor]=useState(initialLettersByColor)\n \n \n let getAllSelectedLetters=(selectedLetters,index)=>{\n   console.log(selectedLetters,index)\n    let cloneAllSelectedLetters = [...allSelectedLetters]\n    cloneAllSelectedLetters[index] = selectedLetters\n    \n \nsetAllSelectedLetters(cloneAllSelectedLetters)\n \n }\n \n let getSelectedLettersByColor = (color,selectedLetters,allLetters)=>{\n   console.log(color,selectedLetters)\n  let cloneAllSelectedLettersByColor ={...allSelectedLettersByColor}\n let arrayLetters=[...cloneAllSelectedLettersByColor[color].selectedLetters,...selectedLetters]\n \n \n if(selectedLetters.length===0 && allLetters){\n   arrayLetters= arrayLetters.filter(letter=>{\n     return !allLetters.some(letter2=>letter2===letter)\n   })\n   console.log(arrayLetters)\n  \n }\n  let setLetters= new Set(arrayLetters)\n  arrayLetters=Array.from(setLetters)\n  cloneAllSelectedLettersByColor[color] = {selectedLetters:arrayLetters}\n  setSelectedLettersByColor(cloneAllSelectedLettersByColor)\n  transformToMainContainerLetterArrayProps(cloneAllSelectedLettersByColor)\n}\n \n \nlet desSelectLetterByColor=(color,letter)=>{\n //alert(color + letter)\nlet cloneAllSelectedLettersByColor ={...allSelectedLettersByColor}\nlet arrayLetters=  [...cloneAllSelectedLettersByColor[color].selectedLetters]\n \nconst index = arrayLetters.indexOf(letter);\nif (index > -1) {\n arrayLetters.splice(index, 1);\n}\n   let setLetters= new Set(arrayLetters)\n  arrayLetters=Array.from(setLetters)\n  cloneAllSelectedLettersByColor[color] = {selectedLetters:arrayLetters}\nsetSelectedLettersByColor(cloneAllSelectedLettersByColor)\ntransformToMainContainerLetterArrayProps(cloneAllSelectedLettersByColor)\n}\nlet getSelectedAllOrNoneLettersByColor = (allOrNone,index)=>{\n  let cloneAllSelectedLettersByColor ={...allSelectedLettersByColor}\n \nlet arrayLetters =[]\n      for(var k in allSelectedLettersByColor) {\n        if(allOrNone==='none'){\n         // alert(k)\narrayLetters= [...cloneAllSelectedLettersByColor[k].selectedLetters].filter(letter=>{\n  return !allLettersByColorAndRow[index][k].letters.some(letter2=>letter2===letter)\n})\n        }else{\n        //  alert('index'+index+'color'+k)\n        //   alert(JSON.stringify(allLettersByColorAndRow[index]))\narrayLetters=  [...cloneAllSelectedLettersByColor[k].selectedLetters, ...allLettersByColorAndRow[index][k].letters]\n        }\n   let setLetters= new Set(arrayLetters)\n  arrayLetters=Array.from(setLetters)\n  cloneAllSelectedLettersByColor[k] = {selectedLetters:arrayLetters}\n      }\n     \n  setSelectedLettersByColor(cloneAllSelectedLettersByColor)\n  transformToMainContainerLetterArrayProps(cloneAllSelectedLettersByColor)\n}\n \nlet transformToMainContainerLetterArrayProps = (allSelectedLettersByColor)=>{\n// alert(JSON.stringify(allSelectedLettersByColor))\n   let transformed=[]\n   for(var k in allSelectedLettersByColor) {\n \n       let lettersConfig = {letters:allSelectedLettersByColor[k].selectedLetters,color:k,selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px'}}\n       transformed.push(lettersConfig)\n}\n//console.log(transformed)\ngetTransformToMainContainerLetterArrayProps(transformed)\n \n}\n \nlet savePreset = ()=>{\n try {\n  \n \n     let transformed=[]\n   for(var k in allSelectedLettersByColor) {\n \n       let lettersConfig = {letters:allSelectedLettersByColor[k].selectedLetters,color:k,selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px'}}\n       transformed.push(lettersConfig)\n}\nlet presets=localStorage.getItem('presets');\npresets =!JSON.parse(presets)?[]:JSON.parse(presets)\npresets= Array.from(new Set([...presets,presetName]))\nlocalStorage.setItem('presets',JSON.stringify(presets) )\nlocalStorage.setItem('selectedPreset', presetName)\nsetSelectedPreset(presetName)\nsetPresets(presets)\nlocalStorage.setItem(presetName, JSON.stringify({preset:allSelectedLettersByColor,transformed}))\n } catch (error) {\n   alert(error)\n }\n}\n \nlet deletePreset = ()=>{\n  localStorage.removeItem(selectedPreset)\n localStorage.setItem('selectedPreset', '')\n setSelectedPreset(null)\n let newPreset= [...presets]\n newPreset.splice(newPreset.indexOf(selectedPreset),1)\n localStorage.setItem('presets',JSON.stringify(newPreset) )\n setPresets(newPreset)\n choosePreset('Default')\n}\n \nlet choosePreset = (presetName)=>{\n let initialConfigs = []\n setUniqueId(Date.now())\n localStorage.setItem('selectedPreset', presetName)\n setSelectedPreset(presetName);\n \n if(presetName==='Default'){\n   setInitialConfigs(defaultConfigs)\n   initialConfigs=[...defaultConfigs]\n   setAllSelectedLetters(defaultConfigs)\n }else{\n     let presetSaved= (JSON.parse(localStorage.getItem(presetName))).preset\nconsole.log(presetSaved)\n let defaultConfigsClone =[...defaultConfigs]\nfor (var i = 0; i < defaultConfigsClone.length; i++) {\n  let defaultConfigArray=     [...defaultConfigsClone[i]]\n defaultConfigArray= defaultConfigArray.map(defaultConfigObj=>{\n  let copyDefaultConfigObj = {...defaultConfigObj}\n  //alert(JSON.stringify(presetSaved[copyDefaultConfigObj.color]) + JSON.stringify(copyDefaultConfigObj.selectedLetters)   + JSON.stringify(presetSaved[copyDefaultConfigObj.color].selectedLetters.filter(presetSavedLetter=>copyDefaultConfigObj.selectedLetters.includes(presetSavedLetter))))\n  copyDefaultConfigObj.selectedLetters= [...presetSaved[copyDefaultConfigObj.color].selectedLetters.filter(presetSavedLetter=>copyDefaultConfigObj.letters.includes(presetSavedLetter))]\n  return copyDefaultConfigObj\n  })\n  defaultConfigsClone[i] =defaultConfigArray\n}\n console.log(defaultConfigsClone)\n initialConfigs=[...defaultConfigsClone]\nsetInitialConfigs([...defaultConfigsClone])\n \n }\n \n let initialLettersByColor ={}\n let allLettersByColorAndRow = []\nlet allLetters = [...initialConfigs].map((initialConfigObj,index)=>{\n let obj= {}\n initialConfigObj.map(innerObj=>{\n  obj[innerObj.color]= {letters:innerObj.letters}\n \n})\nallLettersByColorAndRow.push(obj)\ninitialConfigObj = initialConfigObj.map(({selectedLetters})=>selectedLetters).flat()\n \n \nreturn initialConfigObj\n})\n//allLetters= allLetters.flat()\nlet allLettersConfigFlat= initialConfigs.flat(1)\nallLettersConfigFlat.map(letterConfig=>{\n let arraySelectedLetters =   [...initialLettersByColor[letterConfig.color] && initialLettersByColor[letterConfig.color].selectedLetters?initialLettersByColor[letterConfig.color].selectedLetters:[] ,...letterConfig.selectedLetters]\n let setSelectedLetters= new Set(arraySelectedLetters)\n  arraySelectedLetters=Array.from(setSelectedLetters)\n  let arrayLetters =   [...initialLettersByColor[letterConfig.color] && initialLettersByColor[letterConfig.color].letters?initialLettersByColor[letterConfig.color].letters:[] ,...letterConfig.letters]\n let setLetters= new Set(arrayLetters)\n  arrayLetters=Array.from(setLetters)\n  initialLettersByColor[letterConfig.color] = {selectedLetters:arraySelectedLetters}\n \n})\n \n \n setAllSelectedLetters([...allLetters])\n setSelectedLettersByColor(initialLettersByColor)\n  transformToMainContainerLetterArrayProps(initialLettersByColor);\n setUniqueId(Date.now())\n}\n \n \n \n \nuseEffect(() => {\n     let transformed=[]\n   for(var k in initialLettersByColor) {\n \n       let lettersConfig = {letters:initialLettersByColor[k].selectedLetters,color:k,selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'5px',float:'left', marginRight:'20px'}}\n       transformed.push(lettersConfig)\n}\n \nlocalStorage.setItem('Default', JSON.stringify({preset:allSelectedLettersByColor,transformed}))\nlet presetX = localStorage.getItem('selectedPreset')\nif (!presetX || presetX === 'null')\n{\n  presetX = 'Default'\n}else{\n  presetX = localStorage.getItem('selectedPreset')\n}\n  choosePreset(presetX)\n \n }, []);\n return <div style={style? style:{}}>\n         <div>\n           <select name=\"preset\" value={selectedPreset} onChange={(e)=>choosePreset(e.target.value)}>\n             <option value={'Default'}>Default</option>\n             {presets.map(preset=><option value={preset}>{preset}</option>)}\n            </select>\n            <input type=\"text\" value={presetName} onChange={(e)=>setPresetName(e.target.value)} />\n           <button onClick={savePreset}>Save as preset</button>\n           <button onClick={deletePreset}>Delete preset</button>\n \n          \n         </div>\n        <div style={{textAlign:'center',fontWeight:'600',fontSize:\"80px\"}}>\n    \n     {allSelectedLetters.flat(1).length} Selected\n   </div>\n  <div style={{ height:\"78vh\", overflowY:\"auto\"}}>\n {!reset && initialConfigs.map((initialConfig,index)=><SelectionBlock uniqueId={index} initialConfig={initialConfig} desSelectLetterByColor={desSelectLetterByColor} getSelectedLettersByColor={getSelectedLettersByColor} getSelectedAllOrNoneLettersByColor={(allOrNone)=>getSelectedAllOrNoneLettersByColor(allOrNone,index)} getAllSelectedLetters={(lettersArray)=>getAllSelectedLetters(lettersArray,index)}></SelectionBlock>)}\n </div>\n  \n  \n  \n </div>\n \n})\n \n \n \n\n","import MainContainer from \"./MainContainer\";\nimport {useState,useRef} from 'react'\nimport SelectionContainer from \"./SelectionContainer\";\nfunction App() {\n //document.body.style.zoom = \"80%\";\nlet [lettersConfig,setLettersConfig] = useState([])\n \nlet [selectedScreen,setSelectedScreen] = useState('openerScreen')\nconst childRef = useRef();\nlet choosePreset= (presset) =>{\n \nchildRef.current.choosePresetExternal(presset)\n}\n return <div  >\n \n   {selectedScreen==='openerScreen'&&<div style={{height:\"100vh\",  display: 'flex',\n justifyContent: 'center',\n alignItems: 'center',}}>\n     <div ><div style={{border: 'solid 1px black',cursor:'pointer',padding:'10px'}} onClick={()=>setSelectedScreen(\"SelectionContainer\")}>Setup Area</div><div style={{border: 'solid 1px black',cursor:'pointer',padding:'10px'}}  onClick={()=>setSelectedScreen(\"MainContainer\")}>Main Screen</div></div>\n     </div>}\n <div style={{margin:'20px auto', width:'70%'}} >\n   <div style={{display:'inline-block'}}>\n     <img src=\"https://omarbarbosahmh.github.io/blendingboard/assets/question.png\" alt=\"question\" width='50px'></img>\n     </div>\n  {selectedScreen==='MainContainer' && <div style={{float:'right',display:'inline-block',cursor:\"pointer\"}}  onClick={()=>setSelectedScreen(\"SelectionContainer\")}>\n     <img src=\"https://omarbarbosahmh.github.io/blendingboard/assets/burguer.png\" alt=\"burguer icon\" width=\"50px\"></img>\n     </div>}\n      {selectedScreen==='SelectionContainer' && <div style={{float:'right',display:'inline-block',cursor:\"pointer\"}} onClick={()=>setSelectedScreen(\"MainContainer\")}>\n     <img src=\"https://omarbarbosahmh.github.io/blendingboard/assets/check.png\" alt=\"burguer icon\" width=\"50px\"></img>\n     </div>}\n \n     <div style={{clear:'both'}}>\n       </div>\n       </div>\n      { selectedScreen==='MainContainer'&& <MainContainer     emitChoosePreset={choosePreset}   lettersConfig={lettersConfig}\n       >\n     </MainContainer>}\n \n    <SelectionContainer  ref={childRef} style={{display:selectedScreen==='MainContainer'?'none':'inline'}} getTransformToMainContainerLetterArrayProps={setLettersConfig}\n       >\n     </SelectionContainer>\n  \n  \n  \n </div>\n \n}\n \nexport default App;\n \n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}